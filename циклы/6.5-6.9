using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp9
{
    internal class Program
    {
        static void Main(string[] args)
        {
            #region Задание №4 с 1 по 22
            Console.WriteLine("Задание №4 [c 1 по 22]");
            switch (Convert.ToInt32(Console.ReadLine()))
            {
                case 1:
                    Console.Write("Введите число A: ");
                    double A1 = double.Parse(Console.ReadLine());
                    Console.Write("Введите степень N: ");
                    int N1 = int.Parse(Console.ReadLine());
                    double result1 = 1;
                    for (int i = 0; i < N1; i++)
                    {
                        result1 *= A1;
                    }
                    Console.WriteLine($"{A1} в степени {N1} = {result1}");
                    break;

                case 2:
                    Console.Write("Введите число N: ");
                    int N2 = int.Parse(Console.ReadLine());
                    long factorial2 = 1;
                    for (int i = 1; i <= N2; i++)
                    {
                        factorial2 *= i;
                    }
                    Console.WriteLine($"{N2}! = {factorial2}");
                    break;

                case 3:
                    Console.Write("Введите число N: ");
                    int N3 = int.Parse(Console.ReadLine());
                    int sum3 = 0;
                    for (int i = 1; i <= N3; i++)
                    {
                        sum3 += i * i;
                    }
                    Console.WriteLine($"Сумма квадратов от 1 до {N3} = {sum3}");
                    break;

                case 4:
                    Console.Write("Введите число N: ");
                    int N4 = int.Parse(Console.ReadLine());
                    int sum4 = 0;
                    for (int i = 1; i <= N4; i++)
                    {
                        if (i % 2 == 0)
                            sum4 += i * i;
                        else
                            sum4 += i * i * i;
                    }
                    Console.WriteLine($"Сумма квадратов четных и кубов нечетных = {sum4}");
                    break;

                case 5:
                    Console.Write("Введите число N: ");
                    int N5 = int.Parse(Console.ReadLine());
                    Console.WriteLine("Числа, некратные 5, кратные 3, с суммой цифр некратной 5 и кратной 3:");
                    for (int i = 1; i <= N5; i++)
                    {
                        if (i % 5 != 0 && i % 3 == 0)
                        {
                            int sumDigits = SumOfDigits(i);
                            if (sumDigits % 5 != 0 && sumDigits % 3 == 0)
                            {
                                Console.Write(i + " ");
                            }
                        }
                    }
                    break;

                case 6:
                    Console.Write("Введите число N: ");
                    int N6 = int.Parse(Console.ReadLine());
                    Console.WriteLine("Числа, кратные 5:");
                    for (int i = 1; i <= N6; i++)
                    {
                        if (i % 5 == 0)
                        {
                            Console.Write(i + " ");
                        }
                    }
                    break;

                case 7:
                    Console.Write("Введите число: ");
                    int num7 = int.Parse(Console.ReadLine());
                    bool isPowerOfTwo = (num7 > 0) && ((num7 & (num7 - 1)) == 0);
                    Console.WriteLine($"Число {num7} {(isPowerOfTwo ? "является" : "не является")} степенью двойки");
                    break;

                case 8:
                    Console.Write("Введите число: ");
                    int num8 = int.Parse(Console.ReadLine());
                    Console.Write($"Простые множители числа {num8}: ");
                    int temp8 = num8;
                    for (int i = 2; i <= temp8; i++)
                    {
                        while (temp8 % i == 0)
                        {
                            Console.Write(i + " ");
                            temp8 /= i;
                        }
                    }
                    break;

                case 9:
                    Console.Write("Введите x: ");
                    int x9 = int.Parse(Console.ReadLine());
                    Console.WriteLine($"Совершенные числа от 2 до {x9}:");
                    for (int i = 2; i <= x9; i++)
                    {
                        if (IsPerfectNumber(i))
                        {
                            Console.Write(i + " ");
                        }
                    }
                    break;

                case 10:
                    Console.Write("Введите m: ");
                    int m10 = int.Parse(Console.ReadLine());
                    Console.Write("Введите n: ");
                    int n10 = int.Parse(Console.ReadLine());
                    int sum10 = 0;
                    for (int i = m10; i <= n10; i++)
                    {
                        sum10 += i * i;
                    }
                    Console.WriteLine($"Сумма квадратов от {m10} до {n10} = {sum10}");
                    break;

                case 11:
                    Console.Write("Введите m: ");
                    int m11 = int.Parse(Console.ReadLine());
                    Console.Write("Введите n: ");
                    int n11 = int.Parse(Console.ReadLine());
                    int sum11 = 0;
                    for (int i = m11; i <= n11; i++)
                    {
                        if (i % 2 != 0)
                        {
                            sum11 += i * i;
                        }
                    }
                    Console.WriteLine($"Сумма квадратов нечетных чисел от {m11} до {n11} = {sum11}");
                    break;

                case 12:
                    int product12 = 1;
                    bool found12 = false;
                    for (int i = -80; i <= 80; i++)
                    {
                        if (i % 2 != 0 && i % 7 == 0 && i != 0)
                        {
                            product12 *= i;
                            found12 = true;
                        }
                    }
                    Console.WriteLine($"Произведение нечетных чисел, кратных 7 от -80 до 80 = {(found12 ? product12.ToString() : "нет таких чисел")}");
                    break;

                case 13:
                    int sum13 = 0;
                    for (int i = -10; i <= 10; i++)
                    {
                        if (i > 0 && i % 9 == 0)
                        {
                            sum13 += i;
                        }
                    }
                    Console.WriteLine($"Сумма положительных чисел, кратных 9 от -10 до 10 = {sum13}");
                    break;

                case 14:
                    Console.Write("Введите n (100-800): ");
                    int n14 = int.Parse(Console.ReadLine());
                    int count14 = 0;
                    for (int i = n14 + 1; i <= 999; i++)
                    {
                        count14++;
                    }
                    Console.WriteLine($"Количество трехзначных чисел больше {n14} = {count14}");
                    break;

                case 15:
                    Console.Write("Введите n: ");
                    int n15 = int.Parse(Console.ReadLine());
                    Console.WriteLine($"Числа, взаимно простые с {n15}:");
                    for (int i = 1; i < n15; i++)
                    {
                        if (GCD(i, n15) == 1)
                        {
                            Console.Write(i + " ");
                        }
                    }
                    break;

                case 16:
                    Console.Write("Введите p: ");
                    int p16 = int.Parse(Console.ReadLine());
                    Console.Write("Введите q: ");
                    int q16 = int.Parse(Console.ReadLine());
                    Console.WriteLine($"Делители {q16}, взаимно простые с {p16}:");
                    for (int i = 1; i <= q16; i++)
                    {
                        if (q16 % i == 0 && GCD(i, p16) == 1)
                        {
                            Console.Write(i + " ");
                        }
                    }
                    break;

                case 17:
                    Console.Write("Введите n: ");
                    int n17 = int.Parse(Console.ReadLine());
                    Console.WriteLine($"Простые делители числа {n17}:");
                    for (int i = 2; i <= n17; i++)
                    {
                        if (n17 % i == 0 && IsPrime(i))
                        {
                            Console.Write(i + " ");
                        }
                    }
                    break;

                case 18:
                    Console.WriteLine("Первые 100 простых чисел:");
                    int count18 = 0;
                    int num18 = 2;
                    while (count18 < 100)
                    {
                        if (IsPrime(num18))
                        {
                            Console.Write(num18 + " ");
                            count18++;
                        }
                        num18++;
                    }
                    break;

                case 19:
                    Console.Write("Введите m: ");
                    int m19 = int.Parse(Console.ReadLine());
                    Console.Write("Введите n: ");
                    int n19 = int.Parse(Console.ReadLine());
                    long product19 = 1;
                    for (int i = m19; i <= n19; i++)
                    {
                        if (i % 2 == 0)
                        {
                            product19 *= i * i;
                        }
                    }
                    Console.WriteLine($"Произведение квадратов четных чисел от {m19} до {n19} = {product19}");
                    break;

                case 20:
                    Console.Write("Введите n: ");
                    int n20 = int.Parse(Console.ReadLine());
                    int sum20 = 0;
                    for (int i = 1; i <= n20; i++)
                    {
                        int term = 1;
                        for (int j = i; j <= 2 * i; j++)
                        {
                            term *= j;
                        }
                        sum20 += (i % 2 == 0) ? -term : term;
                    }
                    Console.WriteLine($"Результат = {sum20}");
                    break;

                case 21:
                    Console.Write("Введите N: ");
                    int N21 = int.Parse(Console.ReadLine());
                    int diff21 = 0;
                    for (int i = 1; i <= 2 * N21 - 1; i += 2)
                    {
                        diff21 -= i * i * i;
                    }
                    Console.WriteLine($"Разность кубов {N21} нечетных чисел = {diff21}");
                    break;

                case 22:
                    Console.Write("Введите m: ");
                    int m22 = int.Parse(Console.ReadLine());
                    Console.Write("Введите n: ");
                    int n22 = int.Parse(Console.ReadLine());
                    Console.WriteLine("Квадраты разностей:");
                    for (int i = m22; i <= n22; i++)
                    {
                        for (int j = m22; j <= n22; j++)
                        {
                            if (i != j)
                            {
                                int diff = i - j;
                                Console.WriteLine($"({i} - {j})² = {diff * diff}");
                            }
                        }
                    }
                    break;

                default:
                    Console.WriteLine("Ошибка ввода данных");
                    break;
            }

            static int SumOfDigits(int number)
            {
                int sum = 0;
                while (number > 0)
                {
                    sum += number % 10;
                    number /= 10;
                }
                return sum;
            }

            static bool IsPerfectNumber(int number)
            {
                int sum = 0;
                for (int i = 1; i <= number / 2; i++)
                {
                    if (number % i == 0)
                    {
                        sum += i;
                    }
                }
                return sum == number;
            }

            static int GCD(int a, int b)
            {
                while (b != 0)
                {
                    int temp = b;
                    b = a % b;
                    a = temp;
                }
                return a;
            }

            static bool IsPrime(int number)
            {
                if (number < 2) return false;
                if (number == 2) return true;
                if (number % 2 == 0) return false;

                for (int i = 3; i * i <= number; i += 2)
                {
                    if (number % i == 0)
                        return false;
                }
                return true;
            }
            #endregion


            #region Задание №5 с 1 по 30
            Console.WriteLine("Задание №5 [c 1 по 30]");
            switch (Convert.ToInt32(Console.ReadLine()))
            {
                case 1:
                    for (double x = 0.1; x <= 2.1; x += 0.1)
                    {
                        double y = Math.Pow(x, 3) + Math.Sin(5 * x);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 2:
                    for (double x = 1; x <= 3; x += 0.1)
                    {
                        double y = Math.Pow(x, 2) - Math.Pow(Math.Cos(Math.PI * x), 2);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 3:
                    for (double x = 0.2; x <= 2.2; x += 0.1)
                    {
                        double y = 1.8 * Math.Pow(x, 2) - Math.Sin(10 * x);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 4:
                    for (double x = 2; x <= 4; x += 0.1)
                    {
                        double y = Math.Pow(2, x) - 2 * Math.Pow(x, 2) - 1;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 5:
                    for (double x = 0.1; x <= 2.2; x += 0.1)
                    {
                        double y = Math.Pow(x, 2) - Math.Pow(Math.Cos(x + 1), 2);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 6:
                    for (double x = 1; x <= 3; x += 0.1)
                    {
                        double y = Math.Pow(x, 3) - 4 * Math.Pow(x, 2) + 2;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 7:
                    for (double x = 0.15; x <= 2.1; x += 0.1)
                    {
                        double y = x - 3 * Math.Pow(Math.Cos(1.04 * x), 2);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 8:
                    for (double x = 1; x <= 3; x += 0.1)
                    {
                        double y = Math.Abs(Math.Exp(x) - 2) - Math.Pow(x, 2);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 9:
                    for (double x = 2; x <= 4; x += 0.1)
                    {
                        double y = Math.Pow(x, 3) + 3 * Math.Pow(x, 2) - 3;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 10:
                    for (double x = 0.1; x <= 2.5; x += 0.1)
                    {
                        double y = Math.Pow(x, 2) + 2 * Math.PI * Math.Cos(Math.PI * x);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 11:
                    for (double x = 1.3; x <= 3.4; x += 0.1)
                    {
                        double y = 5 * Math.Pow(x, 3) + 2 * Math.Pow(x, 2) - 15 * x - 6;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 12:
                    for (double x = 2; x <= 4.1; x += 0.1)
                    {
                        double y = Math.Abs(Math.Log10(x)) - Math.Pow(x - 2, 2);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 13:
                    for (double x = 0.1; x <= 2.5; x += 0.1)
                    {
                        double y = Math.Sqrt(x) - 2 * Math.Cos(0.5 * Math.PI * x);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 14:
                    for (double x = 0.1; x <= 2.1; x += 0.1)
                    {
                        double y = Math.Pow(x, 2) - x * Math.PI * Math.Cos(Math.PI * x);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 15:
                    for (double x = 1; x <= 3; x += 0.1)
                    {
                        double y = Math.Pow(x, 3) - 7 * x - 7;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 16:
                    for (double x = 0.1; x <= 2.7; x += 0.1)
                    {
                        double y = Math.Abs(Math.Pow(x, 2) - 4) + 0.25 * x - 2;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 17:
                    for (double x = 0.1; x <= 2.9; x += 0.1)
                    {
                        double y = Math.Pow(x, 2) - Math.Sin(Math.PI * x);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 18:
                    for (double x = 1; x <= 29; x += 1)
                    {
                        double y = Math.Log(Math.Pow(x, 2)) - x + 4;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 19:
                    for (double x = 1.1; x <= 2.9; x += 0.1)
                    {
                        double y = Math.Pow(x, 3) - 6 * Math.Pow(x, 2) + 2;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 20:
                    for (double x = 1; x <= 3; x += 0.1)
                    {
                        double y = 3 * Math.Sin(Math.Sqrt(x)) + 0.25 * x - 3;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 21:
                    for (double x = 0; x <= 2; x += 0.1)
                    {
                        double y = 3 * Math.Cos(x) - Math.Abs(x - 4) + 2;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 22:
                    for (double x = 1.1; x <= 2.9; x += 0.1)
                    {
                        double y = 0.25 * Math.Pow(x, 3) - 2.8 * x - 2;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 23:
                    for (double x = 1; x <= 3; x += 0.1)
                    {
                        double y = Math.Log(Math.Pow(x, 2)) - 18 * Math.Sin(x);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 24:
                    for (double x = 0.1; x <= 3; x += 0.1)
                    {
                        double y = Math.Pow(x, 2) + 4 * Math.Sin(Math.PI * x);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 25:
                    for (double x = 1; x <= 2.9; x += 0.1)
                    {
                        double y = 0.5 * Math.Pow(x, 2) - 1 - Math.Log10(x - 3);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 26:
                    for (double x = 0.1; x <= 3; x += 0.1)
                    {
                        double y = Math.Sqrt(1 + x) - 3 * Math.Cos(x);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 27:
                    for (double x = 1; x <= 3; x += 0.1)
                    {
                        double y = Math.Log(Math.Pow(x, 2)) + x - 5;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 28:
                    for (double x = 1; x <= 3; x += 0.1)
                    {
                        double y = Math.Pow(x, 3) - 1.75 * x + 0.75;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 29:
                    for (double x = 0; x <= 2; x += 0.1)
                    {
                        double y = 0.5 * x - 1 - 2 * Math.Cos(x + Math.PI / 4);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 30:
                    for (double x = 1.1; x <= 3.1; x += 0.1)
                    {
                        double y = 3 * x - 2 * Math.Log(x) - 5;
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                default:
                    Console.WriteLine("Ошибка ввода данных");
                    break;
            }
            #endregion


            #region Задание №6 с 6 по 15
            Console.WriteLine("Задание №7 [c 6 по 15]");
            switch (Convert.ToInt32(Console.ReadLine()))
            {
                case 6:
                    for (double x = -1; x <= 15; x += 1)
                    {
                        double y;
                        if (x > 3.8)
                        {
                            y = Math.Log(Math.Abs(1 + x));
                        }
                        else if (x >= 2.8)
                        {
                            y = Math.Exp(-x);
                        }
                        else
                        {
                            y = Math.Cos(x);
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 7:
                    for (double x = Math.PI; x <= 2 * Math.PI; x += 0.1)
                    {
                        double y;
                        if (x > 3.61)
                        {
                            y = Math.Exp(-(x + 0.8));
                        }
                        else if (x >= 0)
                        {
                            y = 1;
                        }
                        else
                        {
                            y = 0.5 * x;
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 8:
                    for (double x = -1; x <= 3; x += 0.2)
                    {
                        double y;
                        if (x > 1.5)
                        {
                            y = x;
                        }
                        else if (x >= 0)
                        {
                            y = 2 * Math.Pow(x, 2) * Math.Sqrt(Math.Abs(Math.Cos(2 * x)));
                        }
                        else
                        {
                            y = Math.Exp(- Math.Cos(3 * x));
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 9:
                    for (double x = 0; x <= 3; x += 0.2)
                    {
                        double y;
                        if (x > 2.5)
                        {
                            y = (1 - Math.Sqrt(Math.Abs(Math.Cos(2 * x))));
                        }
                        else if (x >= 1)
                        {
                            y = (Math.Pow(x, 2) - x);
                        }
                        else
                        {
                            y = (1 + Math.Pow(x, 2));
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 10:
                    for (double x = -0.5; x <= 5; x += 0.5)
                    {
                        double y;
                        if (x > 4.5)
                        {
                            y = (2 * x);
                        }
                        else if (x >= 0)
                        {
                            y = (1 - Math.Log(1 + Math.Pow(x, 2)));
                        }
                        else
                        {
                            y = Math.Exp(-x);
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 11:
                    for (double x = -Math.PI / 2; x <= Math.PI; x += 0.2)
                    {
                        double y;
                        if (x > 2)
                        {
                            y = Math.Sqrt(Math.Log(Math.Pow(x, 2) - 1));
                        }
                        else if (x >= 0)
                        {
                            y = -2 * Math.Pow(x, 3);
                        }
                        else
                        {
                            y = Math.Exp(Math.Sin(x));
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 12:
                    for (double x = -0.5; x <= 4.5; x += 0.3)
                    {
                        double y;
                        if (x > 3.5)
                        {
                            y = (1 - 2 * Math.Pow(x, 3));
                        }
                        else if (x >= 0)
                        {
                            y = Math.Sqrt(Math.Cos(2 * x - 1));
                        }
                        else
                        {
                            y = Math.Exp(-Math.Cos(2 * x));
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 13:
                    for (double x = -Math.PI; x <= Math.PI / 2; x += 0.2)
                    {
                        double y;
                        if (x > 2.5)
                        {
                            y = (x + 1);
                        }
                        else if (x >= 0)
                        {
                            y = (1 - Math.Pow(x, 5));
                        }
                        else
                        {
                            y = x + Math.Log(Math.Abs(Math.Sin(x)));
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 14:
                    for (double x = -Math.PI / 2; x <= 2 * Math.PI; x += 0.3)
                    {
                        double y;
                        if (x > 2.5)
                        {
                            y = (x - 2);
                        }
                        else if (x >= 0)
                        {
                            y = (1 + Math.Pow(x, 2));
                        }
                        else
                        {
                            y = x * Math.Log(Math.Abs(Math.Cos(x)));
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 15:
                    for (double x = -Math.PI / 2; x <= 2 * Math.PI; x += 0.3)
                    {
                        double y;
                        if (x > 4.5)
                        {
                            y = (1 + 3 * x);
                        }
                        else if (x >= 1)
                        {
                            y = Math.Exp(-2 * x);
                        }
                        else
                        {
                            y = Math.Cos(2* x);
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                default:
                    Console.WriteLine("Ошибка ввода данных");
                    break;
            }

            static double CalculateFactorial(int n)
            {
                if (n < 0) return 0;
                if (n == 0 || n == 1) return 1;

                double result = 1;
                for (int i = 2; i <= n; i++)
                {
                    result *= i;
                }
                return result;
            }

            #endregion


            #region Задание №7 с 6 по 16
            Console.WriteLine("Задание №6 [c 6 по 16]");
            switch (Convert.ToInt32(Console.ReadLine()))
            {
                case 6:
                    for (double x = -3; x <= 2.5; x += 1.1)
                    {
                        double y;
                        if (x > 0)
                        {
                            double sum = 0;
                            for (int k = 1; k <= 10; k++)
                            {
                                double term = Math.Pow(-1, k) * Math.Pow(x, k) / CalculateFactorial(k);
                                sum += term;
                            }
                            y = sum;
                        }
                        else
                        {
                            y = Math.Log10(Math.PI * x);
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 7:
                    for (double x = 0; x <= 4; x += 0.4)
                    {
                        double u;
                        if (x <= 1.5)
                            u = Math.Pow(x, 2) - x + 1;
                        else if (x <= 2.5)
                            u = Math.Atan(x);
                        else
                            u = Math.Pow(Math.Sin(x - 1), 3) + Math.Cos(x + 1);

                        double y = 1.5 + Math.Log(Math.Abs(Math.Sin(u)));
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 8:
                    for (double x = -1; x <= 2; x += 0.15)
                    {
                        double y;
                        if (x > 0)
                        {
                            y = Math.Log(Math.Abs(Math.Sqrt(Math.Pow(x, 3))));
                        }
                        else
                        {
                            double sum = 0;
                            for (int k = 1; k <= 9; k++)
                            {
                                sum += Math.Pow(k, Math.Pow(x, 2));
                            }
                            y = sum;
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 9:
                    for (double x = 0.5; x <= 2; x += 0.15)
                    {
                        double sum = 0;
                        for (int k = 1; k <= 20; k++)
                        {
                            double term = Math.Pow(-3, k) * Math.Pow(x, k) / CalculateFactorial(k);
                            sum += term;
                        }
                        Console.WriteLine($"x = {x}, y = {sum}");
                    }
                    break;

                case 10:
                    for (double x = -2; x <= 1; x += 0.5)
                    {
                        double y;
                        if (x > 0)
                        {
                            double sum = 0;
                            for (int k = 3; k <= 9; k++)
                            {
                                sum += Math.Pow(x, -k);
                            }
                            y = sum;
                        }
                        else
                        {
                            y = Math.Pow(2 - x, 2 - x);
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 11:
                    for (double x = -1; x <= 1; x += 0.25)
                    {
                        double u = Math.Pow(x, 2) - Math.Asin(Math.Pow(x, 2));
                        double y;
                        if (x > Math.PI)
                        {
                            y = Math.Pow(u, Math.Abs(Math.Cos(x))); 
                        }
                        else
                        {
                            y = Math.Pow(u, Math.Sin(x));
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 12:
                    for (double x = 1; x <= 3; x += 0.2)
                    {
                        double u;
                        if (x <= 2)
                            u = Math.Pow(x, 2) - (x + 1) / (3 - x);
                        else
                            u = Math.Pow(Math.Sin(Math.Pow((x - 1), 2)), 3);

                        double y = Math.Exp(u);
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 13:
                    for (double x = -1; x <= 2; x += 0.2)
                    {
                        double y;
                        if (x > 0)
                        {
                            double sum = 0;
                            for (int k = 1; k <= 7; k++)
                            {
                                sum += Math.Pow(x, k) / CalculateFactorial(k);
                            }
                            y = sum;
                        }
                        else
                        {
                            y = Math.Atan(Math.Pow(Math.PI, 2));
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 14:
                    for (double x = 1; x <= 2; x += 0.1)
                    {
                        double sum = 0;
                        for (int k = 1; k <= 10; k++)
                        {
                            double term = Math.Pow(x, 2 * k) / CalculateFactorial(2 * k);
                            sum += term;
                        }
                        Console.WriteLine($"x = {x}, y = {sum}");
                    }
                    break;

                case 15:
                    for (double x = -5; x <= 5; x += 0.5)
                    {
                        double u;
                        if (x > 3)
                            u = Math.Sin(x - 1) + Math.Cos(x + 1);
                        else if (x >= -3)
                            u = Math.Atan(x);
                        else
                            u = Math.Pow(x, 2) - x + 1;

                        double y = 2.51 * Math.Pow(x, 2) * Math.Log(Math.Abs(8 - Math.Sin(u)));
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                case 16:
                    for (double x = -3; x <= 2; x += 0.25)
                    {
                        double y;
                        if (x > 0)
                        {
                            double sum = 0;
                            for (int k = 1; k <= 5; k++)
                            {
                                sum += Math.Pow(x, k);
                            }
                            y = sum;
                        }
                        else
                        {
                            y = Math.Pow(Math.PI, 3.5 * x);
                        }
                        Console.WriteLine($"x = {x}, y = {y}");
                    }
                    break;

                default:
                    Console.WriteLine("Ошибка ввода данных");
                    break;
            }
            #endregion
        }
    }
}
